/**
 * Build file for the data module
 *
 * This module contains the data access layer with repositories,
 * entities, and database configurations.
 */

plugins {
    id 'java'
    id 'java-library'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}

description = 'Data access layer with repositories, entities, and database configurations.'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

ext {
    awsSdkVersion = '1.12.150'
    querydslVersion = '5.0.0' // Updated to 5.0.0 which has better Java 17 support
}

repositories {
    mavenCentral()
}

configurations {
    // For supporting older QueryDSL with Java 17, we need to exclude certain Jakarta APIs
    implementation.exclude group: 'jakarta.persistence', module: 'jakarta.persistence-api'
    implementation.exclude group: 'jakarta.annotation', module: 'jakarta.annotation-api'
}

dependencies {
    // Internal dependencies
    implementation project(':common')
    
    // Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    
    // Add javax.persistence explicitly
    implementation 'javax.persistence:javax.persistence-api:2.2'
    
    // Database dependencies
    implementation 'com.h2database:h2'
    
    // QueryDSL dependencies (with javax.persistence support)
    implementation "com.querydsl:querydsl-jpa:${querydslVersion}"
    implementation "com.querydsl:querydsl-apt:${querydslVersion}"
    
    // For Java 17 compatibility with Querydsl 5.0.0
    annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jpa"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    
    // Add the required mysema dependencies
    implementation "com.mysema.commons:mysema-commons-lang:0.2.4"
    
    // AWS dependencies
    implementation "com.amazonaws:aws-java-sdk-sns:${awsSdkVersion}"
    implementation "com.amazonaws:aws-java-sdk-sqs:${awsSdkVersion}"
    
    // Lombok for boilerplate reduction
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testng:testng'
    testImplementation 'junit:junit'
    
    // Additional dependencies
    implementation 'org.flywaydb:flyway-core' // For database migrations
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.apache.commons:commons-lang3'
}

// Configure test task to use JUnit and TestNG
test {
    useJUnitPlatform()
    // Include TestNG tests
    testLogging {
        events "passed", "skipped", "failed"
    }
}

// Configure QueryDSL source generation
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main {
        java {
            srcDirs += [querydslDir]
        }
    }
}

// Clean generated sources
clean {
    delete querydslDir
}

// Disable bootJar since this is a library module
bootJar {
    enabled = false
}

jar {
    enabled = true
    archiveClassifier = ''
}

// Add version information to manifest
jar {
    manifest {
        attributes(
            'Implementation-Title': project.name,
            'Implementation-Version': project.version,
            'Created-By': "Gradle ${gradle.gradleVersion}",
            'Built-By': System.getProperty('user.name'),
            'Built-Date': new Date().format("yyyy-MM-dd HH:mm:ss")
        )
    }
}

// Add tasks for entity generation validation
task validateEntities {
    group = "verification"
    description = "Validates all entity classes"
    
    doLast {
        logger.lifecycle "Validating entity classes..."
        // This would contain actual validation logic in a real project
        logger.lifecycle "Entity validation complete."
    }
}

// Make sure the validation runs before tests
test.dependsOn validateEntities